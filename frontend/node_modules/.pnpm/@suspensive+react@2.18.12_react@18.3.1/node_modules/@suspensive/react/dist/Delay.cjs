"use client"
"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/Delay.tsx
var Delay_exports = {};
__export(Delay_exports, {
  Delay: () => Delay
});
module.exports = __toCommonJS(Delay_exports);
var import_react3 = require("react");

// src/contexts/DefaultPropsContexts.ts
var import_react = require("react");
var DelayDefaultPropsContext = (0, import_react.createContext)({
  ms: void 0,
  fallback: void 0
});
if (process.env.NODE_ENV === "development") {
  DelayDefaultPropsContext.displayName = "DelayDefaultPropsContext";
}
var SuspenseDefaultPropsContext = (0, import_react.createContext)({
  fallback: void 0,
  clientOnly: void 0
});
if (process.env.NODE_ENV === "development") {
  SuspenseDefaultPropsContext.displayName = "SuspenseDefaultPropsContext";
}

// src/hooks/useTimeout.ts
var import_react2 = require("react");
var useTimeout = (fn, ms) => {
  const fnRef = (0, import_react2.useRef)(fn);
  fnRef.current = fn;
  const fnPreserved = (0, import_react2.useCallback)(() => fnRef.current(), []);
  (0, import_react2.useEffect)(() => {
    const id = setTimeout(fnPreserved, ms);
    return () => clearTimeout(id);
  }, [fnPreserved, ms]);
};

// src/models/SuspensiveError.ts
var SuspensiveError = class _SuspensiveError extends Error {
  static assert(condition, message) {
    if (!condition) {
      throw new _SuspensiveError(message);
    }
  }
};
var Message_Delay_ms_prop_should_be_greater_than_or_equal_to_0 = "Delay: ms prop should be greater than or equal to 0";

// src/Delay.tsx
var import_jsx_runtime = require("react/jsx-runtime");
var Delay = (props) => {
  var _a, _b;
  if (process.env.NODE_ENV === "development" && typeof props.ms === "number") {
    SuspensiveError.assert(props.ms >= 0, Message_Delay_ms_prop_should_be_greater_than_or_equal_to_0);
  }
  const defaultProps = (0, import_react3.useContext)(DelayDefaultPropsContext);
  const ms = (_b = (_a = props.ms) != null ? _a : defaultProps.ms) != null ? _b : 0;
  const [isDelayed, setIsDelayed] = (0, import_react3.useState)(ms <= 0);
  useTimeout(() => setIsDelayed(true), ms);
  if (typeof props.children === "function") {
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: props.children({ isDelayed }) });
  }
  if (isDelayed) {
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: props.children });
  }
  if (props.fallback === void 0) {
    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: defaultProps.fallback });
  }
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: props.fallback });
};
if (process.env.NODE_ENV === "development") {
  Delay.displayName = "Delay";
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Delay
});
//# sourceMappingURL=Delay.cjs.map