"use client"
import {
  DefaultProps,
  DefaultPropsProvider
} from "./chunk-U7CK4ZVL.js";
import {
  Message_DefaultProp_delay_ms_should_be_greater_than_0,
  SuspensiveError
} from "./chunk-NF2UFYHD.js";

// src/Suspensive.tsx
import { useMemo } from "react";
import { Fragment, jsx } from "react/jsx-runtime";
var Suspensive = class {
  constructor(config = {}) {
    var _a, _b;
    if (process.env.NODE_ENV === "development" && typeof ((_b = (_a = config.defaultProps) == null ? void 0 : _a.delay) == null ? void 0 : _b.ms) === "number") {
      SuspensiveError.assert(config.defaultProps.delay.ms > 0, Message_DefaultProp_delay_ms_should_be_greater_than_0);
    }
    this.defaultProps = config.defaultProps;
  }
};
var SuspensiveProvider = ({ value, children }) => {
  var _a, _b;
  const defaultProps = useMemo(
    () => {
      var _a2, _b2;
      return new DefaultProps({ Delay: (_a2 = value.defaultProps) == null ? void 0 : _a2.delay, Suspense: (_b2 = value.defaultProps) == null ? void 0 : _b2.suspense });
    },
    [(_a = value.defaultProps) == null ? void 0 : _a.delay, (_b = value.defaultProps) == null ? void 0 : _b.suspense]
  );
  return value.defaultProps ? /* @__PURE__ */ jsx(DefaultPropsProvider, { defaultProps, children }) : /* @__PURE__ */ jsx(Fragment, { children });
};

export {
  Suspensive,
  SuspensiveProvider
};
//# sourceMappingURL=chunk-3HSSVKIT.js.map