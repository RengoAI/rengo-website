import * as react_jsx_runtime from 'react/jsx-runtime';
import { PropsWithChildren } from 'react';
import { DefaultProps } from './DefaultProps.cjs';
import './OmitKeyof-CFsZLI4k.cjs';
import './Suspense.cjs';
import './DevMode.cjs';
import './Delay.cjs';

type LowercaseFirstLetter<TString extends string> = TString extends `${infer TFirst}${infer TRest}` ? `${Lowercase<TFirst>}${TRest}` : TString;
type LowercaseFirstDepthFieldOf<TObject> = {
    [TKey in keyof TObject as LowercaseFirstLetter<Extract<TKey, string>>]: TObject[TKey];
};
/**
 * @deprecated Use DefaultProps instead
 */
declare class Suspensive {
    defaultProps?: LowercaseFirstDepthFieldOf<DefaultProps>;
    constructor(
    /**
     * @deprecated Use DefaultProps instead
     */
    config?: {
        /**
         * @deprecated Use DefaultProps instead
         */
        defaultProps?: LowercaseFirstDepthFieldOf<DefaultProps>;
    });
}
/**
 * @deprecated Use DefaultPropsProvider instead
 */
interface SuspensiveProviderProps extends PropsWithChildren {
    /**
     * @deprecated Use DefaultPropsProvider instead
     */
    value: Suspensive;
}
/**
 * @deprecated Use DefaultPropsProvider instead
 */
declare const SuspensiveProvider: ({ value, children }: SuspensiveProviderProps) => react_jsx_runtime.JSX.Element;

export { Suspensive, SuspensiveProvider };
