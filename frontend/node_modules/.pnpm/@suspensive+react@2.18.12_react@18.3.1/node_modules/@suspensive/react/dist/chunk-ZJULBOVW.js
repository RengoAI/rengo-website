"use client"
import {
  ClientOnly
} from "./chunk-PXLOC2DW.js";
import {
  __spreadValues
} from "./chunk-HVDFXOFP.js";

// src/utils/hasResetKeysChanged.ts
var hasResetKeysChanged = (a = [], b = []) => a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]));

// src/utils/defineSuspense.tsx
import { Suspense } from "react";
import { jsx } from "react/jsx-runtime";
var SuspenseClientOnly = (props) => /* @__PURE__ */ jsx(ClientOnly, { fallback: props.fallback, children: /* @__PURE__ */ jsx(Suspense, __spreadValues({}, props)) });
function defineSuspense({
  defaultPropsClientOnly,
  componentPropsClientOnly
}) {
  return (componentPropsClientOnly != null ? componentPropsClientOnly : defaultPropsClientOnly) ? SuspenseClientOnly : Suspense;
}

// src/utils/increase.ts
var increase = (prev) => prev + 1;

export {
  hasResetKeysChanged,
  defineSuspense,
  increase
};
//# sourceMappingURL=chunk-ZJULBOVW.js.map