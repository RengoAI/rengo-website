{"version":3,"sources":["../src/wrap.tsx"],"sourcesContent":["import type { ComponentProps, ComponentType } from 'react'\nimport { Delay } from './Delay'\nimport { ErrorBoundary } from './ErrorBoundary'\nimport { ErrorBoundaryGroup } from './ErrorBoundaryGroup'\nimport { Suspense } from './Suspense'\nimport type { OmitKeyof } from './utility-types'\n\ntype WrapperItem<\n  TWrapperComponent extends typeof Suspense | typeof ErrorBoundary | typeof ErrorBoundaryGroup | typeof Delay,\n> = [TWrapperComponent, OmitKeyof<ComponentProps<TWrapperComponent>, 'children'>]\n\nclass Wrap {\n  constructor(\n    private wrappers: (\n      | WrapperItem<typeof Suspense>\n      | WrapperItem<typeof ErrorBoundary>\n      | WrapperItem<typeof ErrorBoundaryGroup>\n      | WrapperItem<typeof Delay>\n    )[]\n  ) {}\n\n  Suspense = (props: OmitKeyof<ComponentProps<typeof Suspense>, 'children'> = {}) => {\n    this.wrappers.unshift([Suspense, props])\n    return this\n  }\n  ErrorBoundary = (props: OmitKeyof<ComponentProps<typeof ErrorBoundary>, 'children'>) => {\n    this.wrappers.unshift([ErrorBoundary, props])\n    return this\n  }\n  ErrorBoundaryGroup = (props: OmitKeyof<ComponentProps<typeof ErrorBoundaryGroup>, 'children'> = {}) => {\n    this.wrappers.unshift([ErrorBoundaryGroup, props])\n    return this\n  }\n  Delay = (props: OmitKeyof<ComponentProps<typeof Delay>, 'children'> = {}) => {\n    this.wrappers.unshift([Delay, props])\n    return this\n  }\n\n  on = <TProps extends ComponentProps<ComponentType>>(Component: ComponentType<TProps>) => {\n    const WrappedComponent = (props: TProps) =>\n      this.wrappers.reduce(\n        (acc, [WrapperComponent, wrapperProps]) => (\n          <WrapperComponent {...(wrapperProps as any)}>{acc}</WrapperComponent>\n        ),\n        <Component {...props} />\n      )\n\n    if (process.env.NODE_ENV === 'development') {\n      WrappedComponent.displayName = `wrap.${[...this.wrappers]\n        .reverse()\n        .map(([WrapperComponent]) => WrapperComponent.displayName)\n        .join('.')}.on(${Component.displayName || Component.name || 'Component'})`\n    }\n\n    return WrappedComponent\n  }\n}\n\n/**\n * A utility for wrapping components with Suspensive components (Suspense, ErrorBoundary, ErrorBoundaryGroup, Delay).\n *\n * @example\n * ```tsx\n * const Page = wrap\n *   .ErrorBoundaryGroup({ blockOutside: true })\n *   .ErrorBoundary({\n *     fallback: ({ error }) => <PageErrorFallback message={error.message} />,\n *   })\n *   .Suspense({ fallback: <PageSkeleton /> })\n *   .on(() => {\n *     const { data: postList } = useSuspenseQuery({\n *       queryKey: ['posts'],\n *       queryFn: () => fetch('/api/posts').then(res => res.json())\n *     })\n *\n *     return <PostList data={postList} />\n *   })\n * ```\n *\n * @see {@link https://suspensive.org/docs/react/wrap Suspensive Docs}\n */\nexport const wrap = {\n  Suspense: (props: OmitKeyof<ComponentProps<typeof Suspense>, 'children'> = {}) => new Wrap([[Suspense, props]]),\n  ErrorBoundary: (props: OmitKeyof<ComponentProps<typeof ErrorBoundary>, 'children'>) =>\n    new Wrap([[ErrorBoundary, props]]),\n  ErrorBoundaryGroup: (props: OmitKeyof<ComponentProps<typeof ErrorBoundaryGroup>, 'children'>) =>\n    new Wrap([[ErrorBoundaryGroup, props]]),\n  Delay: (props: OmitKeyof<ComponentProps<typeof Delay>, 'children'> = {}) => new Wrap([[Delay, props]]),\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AA0CU;AA/BV,IAAM,OAAN,MAAW;AAAA,EACT,YACU,UAMR;AANQ;AAQV,oBAAW,CAAC,QAAgE,CAAC,MAAM;AACjF,WAAK,SAAS,QAAQ,CAAC,UAAU,KAAK,CAAC;AACvC,aAAO;AAAA,IACT;AACA,yBAAgB,CAAC,UAAuE;AACtF,WAAK,SAAS,QAAQ,CAAC,eAAe,KAAK,CAAC;AAC5C,aAAO;AAAA,IACT;AACA,8BAAqB,CAAC,QAA0E,CAAC,MAAM;AACrG,WAAK,SAAS,QAAQ,CAAC,oBAAoB,KAAK,CAAC;AACjD,aAAO;AAAA,IACT;AACA,iBAAQ,CAAC,QAA6D,CAAC,MAAM;AAC3E,WAAK,SAAS,QAAQ,CAAC,OAAO,KAAK,CAAC;AACpC,aAAO;AAAA,IACT;AAEA,cAAK,CAA+C,cAAqC;AACvF,YAAM,mBAAmB,CAAC,UACxB,KAAK,SAAS;AAAA,QACZ,CAAC,KAAK,CAAC,kBAAkB,YAAY,MACnC,oBAAC,mDAAsB,eAAtB,EAA6C,gBAAI;AAAA,QAEpD,oBAAC,8BAAc,MAAO;AAAA,MACxB;AAEF,UAAI,QAAQ,IAAI,aAAa,eAAe;AAC1C,yBAAiB,cAAc,QAAQ,QAAC,GAAG,KAAK,QAAQ,EACrD,QAAQ,EACR,IAAI,CAAC,CAAC,gBAAgB,MAAM,iBAAiB,WAAW,EACxD,KAAK,GAAG,GAAC,QAAO,iBAAU,eAAe,UAAU,QAAQ,aAAW;AAAA,MAC3E;AAEA,aAAO;AAAA,IACT;AAAA,EApCG;AAqCL;AAyBO,IAAM,OAAO;AAAA,EAClB,UAAU,CAAC,QAAgE,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC;AAAA,EAC9G,eAAe,CAAC,UACd,IAAI,KAAK,CAAC,CAAC,eAAe,KAAK,CAAC,CAAC;AAAA,EACnC,oBAAoB,CAAC,UACnB,IAAI,KAAK,CAAC,CAAC,oBAAoB,KAAK,CAAC,CAAC;AAAA,EACxC,OAAO,CAAC,QAA6D,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC;AACvG;","names":[]}