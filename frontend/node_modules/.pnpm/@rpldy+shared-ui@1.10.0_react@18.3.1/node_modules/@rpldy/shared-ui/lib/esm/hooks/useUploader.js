import { useEffect, useMemo } from "react";
import { logger } from "@rpldy/shared";
import createUploader from "@rpldy/uploader";
const useUploader = (options, listeners) => {
  const uploader = useMemo(() => {
    logger.debugLog("Uploady creating a new uploader instance", options);
    return createUploader(options);
  }, [options.enhancer]);
  uploader.update(options);
  useEffect(() => {
    if (listeners) {
      logger.debugLog("Uploady setting event listeners", listeners);
      Object.entries(listeners).forEach(([name, m]) => {
        uploader.on(name, m);
      });
    }
    return () => {
      if (listeners) {
        logger.debugLog("Uploady removing event listeners", listeners);
        Object.entries(listeners).forEach(([name, m]) => uploader.off(name, m));
      }
    };
  }, [listeners, uploader]);
  return uploader;
};
export default useUploader;