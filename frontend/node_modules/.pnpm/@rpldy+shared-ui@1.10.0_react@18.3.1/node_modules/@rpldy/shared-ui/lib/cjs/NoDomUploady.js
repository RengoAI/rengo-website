"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _shared = require("@rpldy/shared");
var _UploadyContext = _interopRequireWildcard(require("./UploadyContext"));
var _useUploader = _interopRequireDefault(require("./hooks/useUploader"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const NoDomUploady = props => {
  const {
    listeners,
    debug,
    children,
    inputRef,
    ...uploadOptions
  } = props;
  _shared.logger.setDebug(!!debug);
  _shared.logger.debugLog("@@@@@@ Uploady Rendering @@@@@@", props);
  const uploader = (0, _useUploader.default)(uploadOptions, listeners);
  const api = (0, _react.useMemo)(() => (0, _UploadyContext.createContextApi)(uploader, inputRef), [uploader, inputRef]);
  return /*#__PURE__*/_react.default.createElement(_UploadyContext.default.Provider, {
    value: api
  }, children);
};
var _default = exports.default = NoDomUploady;