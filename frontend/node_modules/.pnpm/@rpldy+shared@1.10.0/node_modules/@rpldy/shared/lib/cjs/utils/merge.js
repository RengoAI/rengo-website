"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isMergeObj = exports.getMerge = exports.default = void 0;
var _isPlainObject = _interopRequireDefault(require("./isPlainObject"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const isMergeObj = obj => (0, _isPlainObject.default)(obj) || Array.isArray(obj);
exports.isMergeObj = isMergeObj;
const getKeys = (obj, options) => {
  const keys = Object.keys(obj).filter(k => obj.hasOwnProperty(k) && k !== "__proto__");
  return options.withSymbols ? keys.concat(Object.getOwnPropertySymbols(obj)) : keys;
};
const getMerge = (options = {}) => {
  const merge = (target, ...sources) => {
    if (target && sources.length) {
      sources.forEach(source => {
        if (source) {
          getKeys(source, options).forEach(key => {
            const prop = source[key];
            if (!options.predicate || options.predicate(key, prop)) {
              if (typeof prop !== "undefined" || options.undefinedOverwrites) {
                if (isMergeObj(prop)) {
                  if (typeof target[key] === "undefined" || !(0, _isPlainObject.default)(target[key])) {
                    target[key] = Array.isArray(prop) ? [] : {};
                  }
                  merge(target[key], prop);
                } else {
                  target[key] = prop;
                }
              }
            }
          });
        }
      });
    }
    return target;
  };
  return merge;
};
exports.getMerge = getMerge;
var _default = exports.default = getMerge();