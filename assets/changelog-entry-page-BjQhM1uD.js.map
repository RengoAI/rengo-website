{"version":3,"file":"changelog-entry-page-BjQhM1uD.js","sources":["../../src/shared/hooks/use-required-string-params.tsx","../../src/features/blog/changelog/changelog-entry-page.tsx"],"sourcesContent":["import { useMemo } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport const useRequiredStringParams = (): { [key: string]: string } => {\n  const params = useParams();\n  return useMemo(\n    () =>\n      new Proxy(params ?? {}, {\n        get: (_, prop) => {\n          if (typeof prop !== \"string\") {\n            return undefined;\n          }\n          if (!params) {\n            throw new Error(\"Params are undefined\");\n          }\n          const value = params[prop as keyof typeof params];\n          if (!value) {\n            throw new Error(`Required param ${prop} is undefined`);\n          }\n          return value;\n        },\n      }) as { [key: string]: string },\n    [params],\n  );\n};\n","import { rootRoute } from \"@/app/app-routes\";\nimport { Page } from \"@/components/layout/page\";\nimport { getChangelogEntriesByYearAndMonthAndId } from \"@/features/blog/changelog/utils\";\nimport { useRequiredStringParams } from \"@/shared/hooks/use-required-string-params\";\nimport {\n  Badge,\n  Box,\n  Container,\n  HStack,\n  Link,\n  Text,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nexport const ChangelogEntryPage: React.FC = () => {\n  const { year, month, id } = useRequiredStringParams();\n  const entry = getChangelogEntriesByYearAndMonthAndId()[year][month][id];\n\n  if (!entry) {\n    return (\n      <Page sizeProps={{ fullHeight: true }}>\n        <Container maxW=\"4xl\" py={16} px={8}>\n          <Text fontSize=\"xl\" color=\"gray.600\">\n            Changelog entry not found.\n          </Text>\n        </Container>\n      </Page>\n    );\n  }\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case \"Release\":\n        return \"primary\";\n      case \"Improvement\":\n        return \"green\";\n      case \"Retired\":\n        return \"orange\";\n      default:\n        return \"gray\";\n    }\n  };\n\n  return (\n    <Page sizeProps={{ fullHeight: true }}>\n      {/* Breadcrumb */}\n      <Box\n        bg=\"gray.50\"\n        py={4}\n        borderBottom=\"1px solid\"\n        borderColor=\"gray.200\"\n        px={8}\n      >\n        <Link href={rootRoute({}).blog({}).changelog({}).$}>\n          <Text\n            fontSize=\"sm\"\n            color=\"primary.600\"\n            _hover={{ color: \"primary.800\" }}\n            cursor=\"pointer\"\n          >\n            ← Back to changelog\n          </Text>\n        </Link>\n      </Box>\n\n      <Container maxW=\"4xl\" py={12} px={8}>\n        <VStack gap={8} align=\"stretch\">\n          {/* Header */}\n          <VStack gap={4} align=\"stretch\">\n            <HStack gap={3} align=\"center\">\n              <Badge\n                colorScheme={getTypeColor(entry.type)}\n                variant=\"outline\"\n                textTransform=\"uppercase\"\n                fontWeight=\"semibold\"\n                px={2}\n                py={1}\n              >\n                {entry.type}\n              </Badge>\n              <Text fontSize=\"sm\" color=\"gray.600\">\n                {entry.date.day} {entry.date.month} {entry.date.year} •{\" \"}\n                {entry.readTime}\n              </Text>\n            </HStack>\n\n            <Text\n              fontSize={{ base: \"2xl\", md: \"3xl\" }}\n              fontWeight=\"bold\"\n              color=\"gray.900\"\n              lineHeight=\"1.2\"\n            >\n              {entry.title}\n            </Text>\n          </VStack>\n\n          {/* Table of Contents */}\n          <Box\n            p={6}\n            bg=\"white\"\n            borderRadius=\"md\"\n            border=\"1px solid\"\n            borderColor=\"gray.200\"\n          >\n            <Text fontSize=\"lg\" fontWeight=\"semibold\" color=\"gray.900\" mb={4}>\n              Table of Contents\n            </Text>\n            <VStack gap={2} align=\"stretch\">\n              {entry.sections.map((section) => (\n                <Box key={section.id}>\n                  <Text\n                    fontSize=\"sm\"\n                    color=\"primary.600\"\n                    _hover={{ color: \"primary.800\" }}\n                    cursor=\"pointer\"\n                    textDecoration=\"none\"\n                  >\n                    • {section.title}\n                  </Text>\n                </Box>\n              ))}\n            </VStack>\n          </Box>\n\n          {/* Content Sections */}\n          <VStack gap={12} align=\"stretch\">\n            {entry.sections.map((section, index) => (\n              <Box key={section.id} id={section.id}>\n                <Text\n                  fontSize=\"xl\"\n                  fontWeight=\"semibold\"\n                  color=\"gray.900\"\n                  mb={6}\n                >\n                  {section.title}\n                </Text>\n                <VStack gap={4} align=\"stretch\">\n                  {section.content.map((paragraph, idx) => (\n                    <Text\n                      key={idx}\n                      fontSize=\"md\"\n                      lineHeight=\"1.7\"\n                      color=\"gray.700\"\n                    >\n                      {paragraph}\n                    </Text>\n                  ))}\n                </VStack>\n                {index < entry.sections.length - 1 && (\n                  <Box mt={8} h=\"1px\" bg=\"gray.200\" />\n                )}\n              </Box>\n            ))}\n          </VStack>\n\n          {/* Tags and Share */}\n          <Box pt={8} borderTop=\"1px solid\" borderColor=\"gray.200\">\n            <HStack\n              justify=\"space-between\"\n              align=\"center\"\n              flexWrap=\"wrap\"\n              gap={4}\n            >\n              <HStack gap={2} flexWrap=\"wrap\">\n                {entry.tags.map((tag) => (\n                  <Badge\n                    key={tag}\n                    variant=\"outline\"\n                    colorScheme=\"gray\"\n                    textTransform=\"uppercase\"\n                    fontSize=\"xs\"\n                    fontWeight=\"medium\"\n                  >\n                    {tag}\n                  </Badge>\n                ))}\n              </HStack>\n            </HStack>\n          </Box>\n        </VStack>\n      </Container>\n    </Page>\n  );\n};\n"],"names":["useRequiredStringParams","params","useParams","useMemo","_","prop","value","ChangelogEntryPage","year","month","id","entry","getChangelogEntriesByYearAndMonthAndId","jsx","Page","Container","Text","getTypeColor","type","Box","Link","rootRoute","jsxs","VStack","HStack","Badge","section","index","paragraph","idx","tag"],"mappings":"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"}