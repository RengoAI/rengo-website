name: "Lint and Label PR"

on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize

jobs:
  validate_title:
    if: github.actor != 'dependabot[bot]' && github.base_ref != 'production'
    name: Validate PR title
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.PULL_REQUEST_LINT_AND_LABEL_GITHUB_TOKEN }}
        with:
          # Configure which types are allowed (newline-delimited).
          # Default: https://github.com/commitizen/conventional-commit-types
          types: |
            fix
            feat
            docs
            style
            refactor
            perf
            test
            ci
            chore
            revert
          # Configure which scopes are allowed (newline-delimited).
          # These are regex patterns auto-wrapped in `^ $`.
          scopes: |
            deps
            main
            ENG-\d+
          # Configure that a scope must always be provided.
          requireScope: true
          # Configure additional validation for the subject based on a regex.
          # This example ensures the subject doesn't start with an uppercase character.
          ignoreLabels: |
            bot
          # If you're using a format for the PR title that differs from the traditional
          # Conventional Commits spec, you can use these options to customize the parsing of the type, scope and
          # subject. The `headerPattern` should contain a regex where the capturing groups in parentheses
          # correspond to the parts listed in `headerPatternCorrespondence`.
          # See: https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-commits-parser#headerpattern
          headerPattern: '^(\w*)(?:\(([\w$.\-*/ ]*)\))?: (.*)$'
          headerPatternCorrespondence: type, scope, subject
  label_pr:
    if: github.actor != 'dependabot[bot]' && github.base_ref != 'production'
    name: Label PR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/labeler@v5
        with:
          repo-token: ${{secrets.PULL_REQUEST_LINT_AND_LABEL_GITHUB_TOKEN}}
          sync-labels: true
